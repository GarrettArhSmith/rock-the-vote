[{"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/index.js":"1","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/App.js":"2","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/reportWebVitals.js":"3","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/context/UserProvider.js":"4","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Public.js":"5","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Auth.js":"6","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Nav.js":"7","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/IssuePage.js":"8","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Profile.js":"9","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Issue.js":"10","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Comment.js":"11","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/IssueForm.js":"12","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/AuthForm.js":"13","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Votes.js":"14"},{"size":695,"mtime":1606866027757,"results":"15","hashOfConfig":"16"},{"size":1062,"mtime":1607550972706,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1606847699069,"results":"18","hashOfConfig":"16"},{"size":4627,"mtime":1608313273071,"results":"19","hashOfConfig":"16"},{"size":1030,"mtime":1622206946822,"results":"20","hashOfConfig":"16"},{"size":1557,"mtime":1607550330058,"results":"21","hashOfConfig":"16"},{"size":497,"mtime":1607551047595,"results":"22","hashOfConfig":"16"},{"size":1366,"mtime":1607287125608,"results":"23","hashOfConfig":"16"},{"size":878,"mtime":1607213625245,"results":"24","hashOfConfig":"16"},{"size":671,"mtime":1607285875065,"results":"25","hashOfConfig":"16"},{"size":537,"mtime":1607287147519,"results":"26","hashOfConfig":"16"},{"size":1827,"mtime":1607295529474,"results":"27","hashOfConfig":"16"},{"size":1018,"mtime":1607550654812,"results":"28","hashOfConfig":"16"},{"size":2502,"mtime":1607286137673,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ebyssa",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/index.js",[],["65","66"],"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/App.js",[],"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/reportWebVitals.js",[],"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/context/UserProvider.js",[],"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Public.js",["67"],"import React, { useContext, useEffect } from 'react';\nimport { UserContext } from '../context/UserProvider'\nimport { Link } from 'react-router-dom'\n\nimport IssueForm from './IssueForm'\nimport Issue from './Issue'\n\nfunction Public(props) {\n    const { user: { username }, allIssues, getAllIssues } = useContext(UserContext)\n\n    useEffect (() => {\n        getAllIssues()\n        console.log(\"USE EFFECT RAN!\")\n    }, [])\n\n    return (\n        <div className=\"content\">\n            <h1>Home</h1>\n            {username && <h3>Hi, {username[0].toUpperCase() + username.substring(1)}!</h3>}\n            <IssueForm type=\"issue\" />\n            <div className=\"issueList\">\n                {[...allIssues].reverse().map(issue => {\n                    return (\n                        <Link to={`/${issue._id}`} key={issue._id} className=\"issueLink\">\n                            <Issue {...issue} />\n                        </Link>\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default Public;","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Auth.js",[],"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Nav.js",[],"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/IssuePage.js",["68"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { UserContext } from '../context/UserProvider';\n\nimport Issue from './Issue';\nimport IssueForm from './IssueForm'\nimport Comment from './Comment'\n\nconst userAxios = axios.create()\nuserAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\")\n    config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\nfunction IssuePage(props) {\n    const { issueId } = useParams()\n\n    const { issueComments, getIssueComments } = useContext(UserContext)\n    const [issue, setIssue] = useState(false)\n\n    function getOneIssue() {\n        userAxios.get(`/api/issue/${issueId}`)\n            .then(res => setIssue(res.data))\n            .catch(err => console.log(err.response.data.errMsg))\n    }\n    \n    useEffect(() => {\n        getOneIssue()\n        getIssueComments(issueId)\n    }, [])\n\n    return (\n        <div className=\"content\">\n            {issue && <Issue {...issue} />}\n            <IssueForm type=\"comment\" _id={issueId} />\n            <div className=\"issueList\">\n                {[...issueComments]?.reverse()?.map(comment => (\n                    <Comment key={comment._id} {...comment} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default IssuePage;","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Profile.js",["69"],"import React, { useContext, useEffect } from 'react';\nimport { UserContext } from '../context/UserProvider'\nimport { Link } from 'react-router-dom'\n\nimport Issue from './Issue'\n\nfunction Profile(props) {\n    const { user: { username }, userIssues, getUserIssues } = useContext(UserContext)\n\n    useEffect (() => {\n        getUserIssues()\n        console.log(\"USE EFFECT RAN in profile!\")\n    }, [])\n\n    return (\n        <div className=\"content\">\n            <h1>{username[0].toUpperCase() + username.substring(1)}'s Profile</h1>\n            <div className=\"issueList\">\n                {[...userIssues].reverse().map(issue => (\n                    <Link to={`/${issue._id}`} key={issue._id} className=\"issueLink\">\n                            <Issue {...issue} />\n                    </Link>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Issue.js",["70"],"import React from 'react';\nimport Votes from './Votes'\n\nfunction Issue(props) {\n    const { title, description, _id, user: { username }, upVoters, downVoters } = props\n\n    function handleClick(e) {\n        e.preventDefault()\n        e.stopPropagation()\n    }\n\n    return (\n        <div className=\"issue\">\n            <div className=\"issueContent\">\n                <h3>{title}</h3>\n                <p className=\"author\">Posted by {username}</p>\n                <p className=\"description\">{description}</p>\n            </div>\n            <Votes _id={_id} votes={{upVotes: upVoters, downVotes: downVoters}} postType=\"issue\" />\n        </div>\n    );\n}\n\nexport default Issue;","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Comment.js",[],"/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/IssueForm.js",["71"],"import { set } from 'mongoose';\nimport React, { useState, useContext } from 'react';\nimport { UserContext } from '../context/UserProvider'\n\nfunction IssueForm(props) {\n    const { _id, type } = props\n    const { addIssue, addComment } = useContext(UserContext)\n\n    const initInputs = type === \"issue\" ? { title: \"\", description: \"\" } : { comment: \"\" }\n    const [inputs, setInputs] = useState(initInputs)\n\n    function handleChange(e) {\n        const { name, value } = e.target\n        setInputs(prevInputs => ({...prevInputs, [name]: value}))\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        type === \"issue\" ?\n        addIssue(inputs) :\n        addComment(inputs, _id)\n        setInputs(initInputs)\n    }\n\n    return (\n        <form type=\"submit\" onSubmit={handleSubmit} className=\"issueForm\">\n            {type === \"issue\" && (\n                <>\n                    <label htmlFor=\"title\">Title</label>\n                    <input \n                        type=\"text\"\n                        name=\"title\"\n                        value={inputs.title}\n                        onChange={handleChange}\n                        className=\"titleInput\"\n                        placeholder=\"Title...\"\n                    />\n                </>\n            )}\n            <label htmlFor=\"text\">{type === \"issue\" ? \"Description\" : \"Comment\"}</label>\n            <textarea \n                type=\"text\"\n                name={type === \"issue\" ? \"description\" : \"comment\"}\n                value={type === \"issue\" ? inputs.description : inputs.comment}\n                onChange={handleChange}\n                className=\"formTextArea\"\n                placeholder={type === \"issue\" ? \"Description...\" : \"Comment...\"}\n            />\n            <button>POST</button>\n        </form>\n    );\n}\n\nexport default IssueForm;","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/AuthForm.js",["72"],"import React, { useState } from 'react';\n\nfunction AuthForm(props) {\n    const { inputs, handleChange, handleSubmit, btnText, errMsg } = props\n\n    return (\n        <div className=\"content\">\n            <h1>{btnText}</h1>\n            <form className=\"authForm\" onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">Username</label>\n                <input \n                    type=\"text\" \n                    name=\"username\"\n                    value={inputs.username}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <input \n                    type=\"password\" \n                    name=\"password\"\n                    value={inputs.password}\n                    onChange={handleChange}\n                />\n                <p style={{color: \"red\", minHeight: 18, marginTop: 0}}>{errMsg}</p>\n                <button type=\"submit\">{btnText}</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AuthForm;","/Users/joeylehrman/Desktop/dev/rock-the-vote/client/src/components/Votes.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":14,"column":8,"nodeType":"79","endLine":14,"endColumn":10,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":32,"column":8,"nodeType":"79","endLine":32,"endColumn":10,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":13,"column":8,"nodeType":"79","endLine":13,"endColumn":10,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":7,"column":14,"nodeType":"87","messageId":"88","endLine":7,"endColumn":25},{"ruleId":"85","severity":1,"message":"89","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllIssues'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has missing dependencies: 'getIssueComments', 'getOneIssue', and 'issueId'. Either include them or remove the dependency array.",["94"],"React Hook useEffect has a missing dependency: 'getUserIssues'. Either include it or remove the dependency array.",["95"],"no-unused-vars","'handleClick' is defined but never used.","Identifier","unusedVar","'set' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [getAllIssues]",{"range":"102","text":"103"},"Update the dependencies array to be: [getIssueComments, getOneIssue, issueId]",{"range":"104","text":"105"},"Update the dependencies array to be: [getUserIssues]",{"range":"106","text":"107"},[416,418],"[getAllIssues]",[958,960],"[getIssueComments, getOneIssue, issueId]",[395,397],"[getUserIssues]"]